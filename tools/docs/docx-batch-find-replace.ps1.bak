param(
    [Parameter(Mandatory=$true)]
    [string]$Path,

    [Parameter(Mandatory=$true)]
    [string]$MappingJson,

    [Parameter(Mandatory=$false)]
    [switch]$DryRun
)

$map = Get-Content -Raw -LiteralPath $MappingJson | ConvertFrom-Json

$word = New-Object -ComObject Word.Application
$word.Visible = $false

Get-ChildItem -Path $Path -Recurse -Include *.docx -File | ForEach-Object {
    $file = $_.FullName
    Write-Host "Updating: $file" -ForegroundColor Cyan
    $doc = $word.Documents.Open($file)
    $doc.TrackRevisions = $true

    foreach ($rule in $map.rules) {
        $findText = $rule.find
        $replaceText = $rule.replace

        if ($DryRun) {
            # count occurrences
            $find = $word.Selection.Find
            $find.ClearFormatting(); $find.Text = $findText
            $find.Replacement.ClearFormatting(); $find.Replacement.Text = $replaceText
            $count = 0
            while ($word.Selection.Find.Execute()) { $count++ }
            Write-Host ("  [DRY] '{0}' -> '{1}' : {2} matches" -f $findText, $replaceText, $count)
            $word.Selection.HomeKey(6) | Out-Null
        } else {
            $find = $word.Selection.Find
            $find.ClearFormatting(); $find.Text = $findText
            $find.Replacement.ClearFormatting(); $find.Replacement.Text = $replaceText
            $find.Forward = $true
            $find.Wrap = 1  # wdFindContinue
            $find.Format = $false
            $find.MatchCase = $false
            $find.MatchWholeWord = $false
            $find.MatchWildcards = $false
            $find.Replacement.Text = $replaceText
            $word.Selection.Find.Execute(Replace=2) | Out-Null  # wdReplaceAll
            Write-Host ("  Replaced '{0}' -> '{1}'" -f $findText, $replaceText)
            $word.Selection.HomeKey(6) | Out-Null
        }
    }

    if (-not $DryRun) { $doc.Save() }
    $doc.Close()
}

$word.Quit()
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($word) | Out-Null
