{
  "permissions": {
    "allow": [
      "Bash(Stop-Process -Force -ErrorAction SilentlyContinue)",
      "Bash(/dev/null)",
      "Bash(dotnet test:*)",
      "Bash(test:*)",
      "Bash(dotnet build:*)",
      "Bash(dotnet restore:*)",
      "Bash(az:*)",
      "Bash(git diff:*)",
      "Bash(git checkout:*)",
      "Bash(dotnet clean:*)",
      "Bash(git log:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git filter-branch:*)",
      "Bash(git branch:*)",
      "Bash($env:FILTER_BRANCH_SQUELCH_WARNING=1)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --force --tree-filter 'if [ -f \"\"dev/projects/sdap_project/Sprint 3/TASK-1.2-IMPLEMENTATION-COMPLETE.md\"\" ]; then sed -i \"\"s/~Ac8Q~JGnsrvNEODvFo8qmtKbgj1PmwmJ6GVUaJj/[REDACTED]/g\"\" \"\"dev/projects/sdap_project/Sprint 3/TASK-1.2-IMPLEMENTATION-COMPLETE.md\"\"; fi' 48d47ea..HEAD)",
      "Bash(git for-each-ref:*)",
      "Bash(ForEach-Object { git update-ref -d $_ })",
      "Bash(xargs -r git update-ref -d)",
      "Bash(git reflog:*)",
      "Bash(git gc:*)",
      "Bash(powershell:*)",
      "Bash(git mv:*)",
      "Bash(svn export:*)",
      "Bash(curl -L https://api.github.com/repos/microsoft/PowerApps-Samples/contents/component-framework/DataSetGrid -o dataset-listing.json)",
      "Bash(curl -L \"https://api.github.com/repos/microsoft/PowerApps-Samples/contents/component-framework/DataSetGrid/DataSetGrid?ref=master\" -o \"c:\\code_files\\spaarke\\dev\\research\\pcf-samples\\datasetgrid-subdir-listing.json\")",
      "Bash(curl -L \"https://api.github.com/repos/microsoft/PowerApps-Samples/contents/component-framework/DataSetGrid/assets?ref=master\" -o \"c:\\code_files\\spaarke\\dev\\research\\pcf-samples\\assets-subdir-listing.json\")",
      "Bash(curl:*)",
      "Bash(dir:*)",
      "Bash(if not exist \"src\\types\" mkdir srctypes)",
      "Bash(npm install)",
      "Bash(npm run build:*)",
      "Bash(cat:*)",
      "Bash(npm install:*)",
      "Bash(npm test)",
      "Bash(npm run test:coverage:*)",
      "Bash(npm test:*)",
      "Bash(npx playwright:*)"
    ],
    "deny": [],
    "ask": []
  }
}