{
  "permissions": {
    "allow": [
      "Bash(git commit -m \"$(cat <<''EOF''\nrefactor(dataverse): change ServiceClient lifetime from Scoped to Singleton\n\n- Change IDataverseService registration from AddScoped to AddSingleton\n- Use factory pattern for explicit service resolution\n- Add comment explaining performance benefit (eliminates 500ms overhead)\n\nServiceClient is thread-safe and expensive to initialize (~500ms).\nCreating per-request instances defeats internal connection pooling.\nSingleton lifetime reduces health check from 500ms to <50ms.\n\nNo captive dependencies: only IConfiguration and ILogger (both Singleton).\n\nPerformance Impact:\n- Health check: 500ms â†’ <100ms\n- Dataverse queries: 650ms â†’ <100ms (85% improvement)\n- Eliminates per-request connection overhead\n\nADR: ADR-010 (Singleton for expensive resources)\nTask: Phase 1, Task 3 (Fix ServiceClient Lifetime)\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(for:*)",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(dotnet test:*)",
      "Bash(git commit:*)",
      "Bash(pac entity list:*)",
      "Bash(pac help:*)",
      "Bash(pac power-fx help:*)",
      "Bash(pac entity help:*)",
      "Bash(pac power-fx run:*)",
      "Bash(az account get-access-token:*)",
      "Bash(echo:*)",
      "Bash(az login:*)",
      "Bash(else echo \"âš  Already enabled\")",
      "Bash(pac entity create:*)",
      "Bash(pac pcf list:*)",
      "Bash(pac admin list-publishers:*)",
      "Bash(msbuild:*)",
      "Bash(\"/c/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/MSBuild.exe\" /t:Rebuild /p:Configuration=Release)",
      "Bash(exit 0)",
      "Bash(\"/c/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/MSBuild.exe\" c:code_filesspaarkesrccontrolsUniversalQuickCreateUniversalQuickCreateSolutionUniversalQuickCreateSolution.cdsproj /t:Rebuild /p:Configuration=Release)",
      "Bash(dotnet msbuild:*)",
      "Bash(az account show:*)",
      "Read(//c/code_files/**)",
      "Bash(az webapp log config:*)",
      "Bash(az servicebus namespace show:*)",
      "Bash(az servicebus namespace list:*)",
      "Bash(git log:*)",
      "Bash(az servicebus namespace authorization-rule keys list:*)",
      "Bash(az servicebus queue list:*)",
      "Bash(az servicebus queue create:*)",
      "Bash(do echo \"Attempt $i:\")",
      "Bash(az servicebus queue show:*)",
      "Bash(do echo \"Test $i:\")",
      "Bash(az webapp config set:*)",
      "Bash(awk:*)",
      "Bash(az monitor app-insights query:*)",
      "Bash(git checkout:*)",
      "Bash(az webapp stop:*)",
      "Bash(az webapp start:*)",
      "Bash(az webapp deployment:*)",
      "Bash(\"/c/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/MSBuild.exe\" /c/code_files/spaarke/src/controls/UniversalQuickCreate/UniversalQuickCreateSolution/UniversalQuickCreateSolution.cdsproj /t:Rebuild /p:Configuration=Release)",
      "Bash(else echo \"Already enabled\")",
      "Bash(az webapp log tail:*)",
      "Bash(curl:*)",
      "Bash(npm run build:*)",
      "Bash(\"/c/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/MSBuild.exe\" \"c:/code_files/spaarke/src/controls/UniversalDatasetGrid/UniversalDatasetGridSolution/UniversalDatasetGridSolution.cdsproj\" /t:Rebuild /p:Configuration=Release)",
      "Bash(pac solution pack:*)",
      "Bash(pac solution import:*)",
      "Bash(pac solution list:*)",
      "Bash(pac solution add-reference:*)",
      "Bash(if [ -f \"/c/code_files/spaarke/Directory.Packages.props\" ])",
      "Bash(then mv \"/c/code_files/spaarke/Directory.Packages.props\" \"/c/code_files/spaarke/Directory.Packages.props.disabled\")",
      "Bash(fi)",
      "Bash(dotnet build:*)",
      "Bash(if [ -f \"/c/code_files/spaarke/Directory.Packages.props.disabled\" ])",
      "Bash(then mv \"/c/code_files/spaarke/Directory.Packages.props.disabled\" \"/c/code_files/spaarke/Directory.Packages.props\")",
      "Bash(pac solution publish:*)",
      "Bash(npm run clean:*)",
      "Bash(if [ -f \"../../Directory.Packages.props\" ])",
      "Bash(then mv \"../../Directory.Packages.props\" \"../../Directory.Packages.props.disabled\")",
      "Bash(if [ -f \"../../Directory.Build.props\" ])",
      "Bash(then mv \"../../Directory.Build.props\" \"../../Directory.Build.props.disabled\")",
      "Bash(if [ -f \"UniversalDatasetGrid/Directory.Build.props\" ])",
      "Bash(then mv \"UniversalDatasetGrid/Directory.Build.props\" \"UniversalDatasetGrid/Directory.Build.props.disabled\")",
      "Bash(if [ -f \"Directory.Build.props\" ])",
      "Bash(then mv \"Directory.Build.props\" \"Directory.Build.props.disabled\")",
      "Bash(pac webresource list:*)",
      "Bash(pac pcf push:*)",
      "Bash(az webapp log:*)",
      "Bash(unzip:*)",
      "Bash(dotnet publish:*)",
      "Bash(powershell:*)",
      "Bash(az webapp deploy:*)",
      "Bash(az webapp restart:*)",
      "Bash(tar:*)",
      "Bash(zip:*)",
      "Bash(az webapp config appsettings list:*)",
      "Bash(dotnet clean:*)",
      "Bash(az ad app permission list:*)",
      "Bash(az ad sp show:*)",
      "Bash(az webapp show:*)",
      "Bash(az webapp list:*)",
      "Bash(if [ -f \"Directory.Packages.props\" ])",
      "Bash(then mv \"Directory.Packages.props\" \"Directory.Packages.props.disabled\")",
      "Bash(if [ -f \"Directory.Packages.props.disabled\" ])",
      "Bash(then mv \"Directory.Packages.props.disabled\" \"Directory.Packages.props\")",
      "Bash(if [ -f \"Directory.Build.props.disabled\" ])",
      "Bash(then mv \"Directory.Build.props.disabled\" \"Directory.Build.props\")",
      "Bash(\"/c/Program Files/Microsoft Visual Studio/2022/Professional/MSBuild/Current/Bin/MSBuild.exe\" /c/code_files/spaarke/src/controls/UniversalDatasetGrid/UniversalDatasetGridSolution/UniversalDatasetGridSolution.cdsproj /t:Rebuild /p:Configuration=Release)",
      "Bash(pac solution export:*)",
      "Bash(timeout 30 pac webresource:*)",
      "Bash(pac solution delete:*)",
      "Bash(tree:*)",
      "Bash(while read f)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(else echo \"Directory.Packages.props already disabled or doesn''t exist\")",
      "Bash(else echo \"Directory.Packages.props already restored\")",
      "Bash(pac auth list:*)",
      "Bash(pac entity show:*)",
      "Bash(find:*)",
      "Bash(if [ -f \"c:/code_files/spaarke/src/controls/UniversalQuickCreate/Directory.Packages.props.disabled\" ])",
      "Bash(then mv \"c:/code_files/spaarke/src/controls/UniversalQuickCreate/Directory.Packages.props.disabled\" \"c:/code_files/spaarke/src/controls/UniversalQuickCreate/Directory.Packages.props\")",
      "Bash(else echo \"Directory.Packages.props already exists or wasn''t disabled\")",
      "Read(//c/**)",
      "Bash(pac data query:*)",
      "Bash(pac auth:*)",
      "Bash(git add:*)"
    ],
    "deny": [],
    "ask": []
  }
}
