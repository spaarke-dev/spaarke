=== Phase 4 Cache Performance Test ===
Testing OBO token caching on /api/me endpoint

Step 1: Getting auth token...
✓ Token obtained (2625 chars)

Step 2: Making 5 requests to /api/me endpoint
Expected: First request = cache MISS (OBO exchange ~200ms)
         Subsequent requests = cache HIT (~5ms)

Request 1...
  HTTP Status: 400
  Response Time: 0.334699s (445ms client-side)
  Expected: Cache MISS (first request, performing OBO)

Request 2...
  HTTP Status: 400
  Response Time: 0.287687s (388ms client-side)
  Expected: Cache HIT (using cached Graph token)

Request 3...
  HTTP Status: 400
  Response Time: 0.289424s (390ms client-side)
  Expected: Cache HIT (using cached Graph token)

Request 4...
  HTTP Status: 400
  Response Time: 0.282310s (402ms client-side)
  Expected: Cache HIT (using cached Graph token)

Request 5...
  HTTP Status: 400
  Response Time: 0.327031s (432ms client-side)
  Expected: Cache HIT (using cached Graph token)

=== Test Complete ===

To verify cache behavior, check Azure logs:
  az webapp log tail --name spe-api-dev-67e2xz --resource-group spe-infrastructure-westus2

Look for log messages:
  - 'Cache MISS for token hash' (first request)
  - 'Cache HIT for token hash' (subsequent requests)
  - 'Using cached Graph token (cache hit)' (in GraphClientFactory)

Expected Performance:
  Request 1: ~200-300ms (OBO exchange + Graph API call)
  Requests 2-5: ~50-100ms (cached token, only Graph API call)
  Cache reduces OBO overhead by 97% (~200ms → ~5ms)
